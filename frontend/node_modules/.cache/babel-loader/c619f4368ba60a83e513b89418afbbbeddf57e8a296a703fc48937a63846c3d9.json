{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ajay Shankar Gore\\\\OneDrive\\\\Desktop\\\\nerve-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport DateDropdown from './components/DateDropdown';\nimport StrategyCard from './components/StrategyCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const views = ['Bullish', 'Bearish', 'RangeBound', 'Volatile'];\n  const dates = ['25-Apr-2024', '02-May-2024', '09-May-2024', '31-May-2024', '21-Jun-2024'];\n  const [selectedView, setSelectedView] = useState(views[0]);\n  const [selectedDate, setSelectedDate] = useState(dates[0]);\n  const [strategies, setStrategies] = useState([]);\n\n  // Strategy data based on PDF\n  const strategyArray = [{\n    view: 'Bullish',\n    value: {\n      '25-Apr-2024': ['Bull Call Spread', 'Bull Put Spread', 'Long Call', 'Strategy1'],\n      '02-May-2024': ['Bull Call Spread', 'Long Call', 'Strategy2'],\n      '09-May-2024': ['Strategy Put', 'Strategy Call']\n    }\n  }, {\n    view: 'Bearish',\n    value: {\n      '25-Apr-2024': ['Bear Call Spread', 'Bear Call Spread', 'Long Put'],\n      '31-May-2024': ['Long Put', 'Bear Put Spread'],\n      '21-Jun-2024': ['Bear Put Spread', 'Strategy3', 'Long Put']\n    }\n  }, {\n    view: 'RangeBound',\n    value: {\n      '25-Apr-2024': ['Short Straddle', 'Iron Butterfly'],\n      '02-May-2024': ['Short Straddle', 'Strategy1', 'Strategy2'],\n      '21-Jun-2024': ['Iron Condor']\n    }\n  }, {\n    view: 'Volatile',\n    value: {\n      '02-May-2024': ['Long Straddle', 'Strategy1'],\n      '09-May-2024': ['Long Straddle', 'Strategy2'],\n      '31-May-2024': ['Long Strangle', 'Long Straddle']\n    }\n  }];\n\n  // Function to fetch strategies based on selected view and date\n  const getStrategies = (view, date) => {\n    const strategyData = strategyArray.find(item => item.view === view);\n    return (strategyData === null || strategyData === void 0 ? void 0 : strategyData.value[date]) || [];\n  };\n  useEffect(() => {\n    const data = getStrategies(selectedView, selectedDate);\n    setStrategies(data);\n  }, [selectedView, selectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-toggle\",\n      children: views.map(view => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedView === view ? 'active' : '',\n        onClick: () => setSelectedView(view),\n        children: view\n      }, view, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateDropdown, {\n      dates: dates,\n      selectedDate: selectedDate,\n      onSelectDate: setSelectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategy-cards\",\n      children: strategies.length > 0 ? strategies.map((strategy, index) => /*#__PURE__*/_jsxDEV(StrategyCard, {\n        name: strategy,\n        count: strategies.filter(s => s === strategy).length\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No strategies found for \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iCRCtWNeC6CS5/+Dv2Wk9vvaicw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DateDropdown","StrategyCard","jsxDEV","_jsxDEV","App","_s","views","dates","selectedView","setSelectedView","selectedDate","setSelectedDate","strategies","setStrategies","strategyArray","view","value","getStrategies","date","strategyData","find","item","data","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSelectDate","length","strategy","index","name","count","filter","s","_c","$RefreshReg$"],"sources":["C:/Users/Ajay Shankar Gore/OneDrive/Desktop/nerve-app/frontend/src/App.js"],"sourcesContent":["\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport DateDropdown from './components/DateDropdown';\nimport StrategyCard from './components/StrategyCard';\n\nconst App = () => {\n  const views = ['Bullish', 'Bearish', 'RangeBound', 'Volatile'];\n  const dates = ['25-Apr-2024', '02-May-2024', '09-May-2024', '31-May-2024', '21-Jun-2024'];\n  const [selectedView, setSelectedView] = useState(views[0]);\n  const [selectedDate, setSelectedDate] = useState(dates[0]);\n  const [strategies, setStrategies] = useState([]);\n\n  // Strategy data based on PDF\n  const strategyArray = [\n    {\n      view: 'Bullish',\n      value: {\n        '25-Apr-2024': ['Bull Call Spread', 'Bull Put Spread', 'Long Call', 'Strategy1'],\n        '02-May-2024': ['Bull Call Spread', 'Long Call', 'Strategy2'],\n        '09-May-2024': ['Strategy Put', 'Strategy Call'],\n      },\n    },\n    {\n      view: 'Bearish',\n      value: {\n        '25-Apr-2024': ['Bear Call Spread', 'Bear Call Spread', 'Long Put'],\n        '31-May-2024': ['Long Put', 'Bear Put Spread'],\n        '21-Jun-2024': ['Bear Put Spread', 'Strategy3', 'Long Put'],\n      },\n    },\n    {\n      view: 'RangeBound',\n      value: {\n        '25-Apr-2024': ['Short Straddle', 'Iron Butterfly'],\n        '02-May-2024': ['Short Straddle', 'Strategy1', 'Strategy2'],\n        '21-Jun-2024': ['Iron Condor'],\n      },\n    },\n    {\n      view: 'Volatile',\n      value: {\n        '02-May-2024': ['Long Straddle', 'Strategy1'],\n        '09-May-2024': ['Long Straddle', 'Strategy2'],\n        '31-May-2024': ['Long Strangle', 'Long Straddle'],\n      },\n    },\n  ];\n\n  // Function to fetch strategies based on selected view and date\n  const getStrategies = (view, date) => {\n    const strategyData = strategyArray.find((item) => item.view === view);\n    return strategyData?.value[date] || [];\n  };\n\n  useEffect(() => {\n    const data = getStrategies(selectedView, selectedDate);\n    setStrategies(data);\n  }, [selectedView, selectedDate]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"view-toggle\">\n        {views.map((view) => (\n          <button\n            key={view}\n            className={selectedView === view ? 'active' : ''}\n            onClick={() => setSelectedView(view)}\n          >\n            {view}\n          </button>\n        ))}\n      </div>\n      <DateDropdown dates={dates} selectedDate={selectedDate} onSelectDate={setSelectedDate} />\n      <div className=\"strategy-cards\">\n        {strategies.length > 0 ? (\n          strategies.map((strategy, index) => (\n            <StrategyCard key={index} name={strategy} count={strategies.filter((s) => s === strategy).length} />\n          ))\n        ) : (\n          <p>No strategies found for {selectedDate}</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}